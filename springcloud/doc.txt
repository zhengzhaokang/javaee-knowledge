以下是一份具有十年工作经验的Java后端开发人员的简历模板，您可以根据自己的实际情况进行调整和补充。

---

### **[您的姓名]**

**联系方式：**
- 电话：[您的电话号码]
- 邮箱：[您的邮箱地址]
- LinkedIn：[您的LinkedIn主页]
- GitHub：[您的GitHub主页]

---

### **个人简介**
具有十年Java后端开发经验，专注于高并发、分布式系统的设计与开发。熟悉微服务架构、云计算平台及DevOps实践，
具备丰富的团队协作和项目管理经验。擅长解决复杂技术问题，优化系统性能，并持续关注新技术的发展与应用。


### **工作经历**
高级Java开发工程师
纬创软件 北京 2023/9-2025/3
-- 负责核心业务系统的架构设计与开发，使用Spring Boot、Spring Cloud等技术栈构建高可用微服务系统。
-- 优化系统性能，将接口响应时间降低30%，数据库查询效率提升50%。
-- 主导团队技术选型，引入Docker实现容器化部署，提升系统可扩展性和稳定性。
-- 主导团队完成项目需求分析、技术文档编写和代码评审。
-- 完成多个重要项目的交付，确保项目按时上线并满足业务需求。

高级Java开发工程师
多点Dmall 北京 2021-2023
-- 负责公司核心业务系统的开发与维护，使用Spring、Redis、Caffeine等技术栈。
-- 负责数据库设计与优化，编写高效的SQL语句，解决慢查询问题。
-- 设计并实现分布式缓存方案，使用Redis缓存热点数据，减少数据库压力。
-- 带领5人开发团队，完成多个迭代版本需求的交付，确保项目按时上线并满足业务需求。

Java开发工程师
春播科技 北京 2018-2020
-- 负责公司核心业务系统的开发与维护，使用Spring、Redis、Kafka等技术栈。
-- 实现消息队列Kafka的集成，提升系统异步处理能力。
-- 编写单元测试和集成测试，确保代码质量和系统稳定性。

Java开发工程师
软通动力 深圳 2015-2017
-- 参与公司核心业务系统的开发与维护，使用Java EE技术栈。
-- 学习并应用设计模式，优化代码结构，提升代码可维护性。
-- 与前端团队紧密合作，完成API接口的设计与开发。

### **工作经历**

#### **高级Java开发工程师**
**[公司名称]** | [城市] | [起止时间]
- 负责核心业务系统的架构设计与开发，使用Spring Boot、Spring Cloud等技术栈构建高可用微服务系统。
- 优化系统性能，将接口响应时间降低30%，数据库查询效率提升50%。
- 主导团队技术选型，引入Kubernete和Docker实现容器化部署，提升系统可扩展性和稳定性。
- 设计并实现分布式缓存方案，使用Redis缓存热点数据，减少数据库压力。
- 带领5人开发团队，完成多个重要项目的交付，确保项目按时上线并满足业务需求。

#### **Java开发工程师**
**[公司名称]** | [城市] | [起止时间]
- 参与公司核心业务系统的开发与维护，使用Spring、Hibernate等技术栈。
- 负责数据库设计与优化，编写高效的SQL语句，解决慢查询问题。
- 实现消息队列（如RabbitMQ、Kafka）的集成，提升系统异步处理能力。
- 编写单元测试和集成测试，确保代码质量和系统稳定性。
- 与前端团队紧密合作，完成API接口的设计与开发。

#### **初级Java开发工程师**
**[公司名称]** | [城市] | [起止时间]
- 参与公司内部管理系统的开发，使用Java EE技术栈。
- 学习并应用设计模式，优化代码结构，提升代码可维护性。
- 协助团队完成项目需求分析、技术文档编写和代码评审。
- 参与系统部署与运维，熟悉Linux服务器操作和Shell脚本编写。

---

### **教育背景**
**[学位]** | [专业]
**[学校名称]** | [城市] | [起止时间]

---

### **技术技能**
- **编程语言：** Java（精通）、Python（熟悉）、SQL（熟练）
- **框架与工具：** Spring Boot、Spring Cloud、Hibernate、MyBatis、Redis、Kafka、RabbitMQ
- **数据库：** MySQL、PostgreSQL、MongoDB
- **云计算与DevOps：** AWS、Docker、Kubernetes、Jenkins、Git
- **其他技能：** 分布式系统设计、微服务架构、性能优化、单元测试


### **技术技能**

编程语言: Java(精通)、SQL(熟练)、JavaScript(熟练)
框架与工具: Spring、SpringBoot、Spring Cloud、Mybatis、Redis、Caffeine、Kafka、JVM
分布式中间件: Eureka、Nacos、Ribbon、FeignClient、Hystrix、Sentinel、Seata
数据库: MySQL、PostgreSQL、MongoDB、Oracle
云计算与DevOps: Maven、Git、AWS、Docker、Kubernetes、Jenkins
其他技能: 分布式系统设计、微服务架构、性能优化、并发编程、Coplite编程

---

### **项目经验**

#### **项目名称：高并发电商平台**
- **技术栈：** Spring Cloud、Redis、Kafka、MySQL
- **项目描述：** 设计并开发了一个支持高并发的电商平台，日均订单量超过100万。
- **职责：**
  - 负责订单模块的设计与开发，使用分布式锁解决超卖问题。
  - 使用Redis缓存商品信息，减少数据库查询压力。
  - 实现消息队列异步处理订单状态更新，提升系统吞吐量。

#### **项目名称：企业级微服务管理系统**
- **技术栈：** Spring Boot、Docker、Kubernetes、PostgreSQL
- **项目描述：** 为企业开发了一套基于微服务架构的内部管理系统。
- **职责：**
  - 设计并实现用户权限管理模块，支持RBAC权限模型。
  - 使用Docker和Kubernetes实现系统的容器化部署。
  - 编写自动化测试脚本，确保系统稳定性。

人工智能驱动的贸易融资
将风险降至最低，实现增长最大化

项目名称:海外司库平台
技术栈:SpringBoot、SpringCloud、Redis、Kafka、PostgreSQL
项目描述:服务于新加坡财务团队，为其提供一站式的司库管理平台。平台功能主要有资金转移模块、供应链融资模块、信用证模块、主数据模块、财务披露模块、规则引擎模块、报表模块等。
主要解决了财务团队资金分散、管理困难、透明度低、风险控制不足等痛点，将风险降至最低，实现增长最大化。
职责与成就:
-负责核心业务系统的架构设计与开发，采用微服务架构（Spring Cloud）实现模块化开发。
-开发核心模块:
 -资金转移模块:资金转移模块通过内部调拨、资金池管理等功能，帮助企业实现资金的高效调配和集中管理。同时，通过审批流程、实时监控，确保资金转移的合规性和安全性。
 -主数据模块:主要管理公司信息、银行账号信息等主数据信息，供各模块统一调用.
 -规则引擎模块:通过规则定义、执行等功能，结合业务模块，动态配置校验规则、业务规则等，提升复杂业务逻辑的运营效率和管理水平。
-优化系统性能，如使用Redis、线程池、数据库索引、批处理提升性能。

项目名称:多点Dmall APP首页系统
技术栈:Spring、Redis、Caffeine、Kafka、dubbo、zookeeper、Mysql
项目描述:多点DMALL是一站式全渠道数字零售解决方案服务商，主要客户有物美超市、重庆百货、胖东来超市等，为客户提供端到端的商业SaaS解决方案。
首页系统是用户访问App的第一入口，负责展示商品推荐、促销活动、分类导航等内容。项目采用微服务架构，支持高并发访问和个性化推荐。
主要解决了用户线下购物不便、物流配送慢、退换货麻烦等痛点，为用户提供更便捷、高效的购物体验，满足用户的多样化需求。
职责与成就:
-负责首页系统需求分析与系统设计。
-核心功能开发
 -开发首页内容管理模块，支持动态配置轮播图、广告位、推荐商品、分类导航、新人促销、优惠券楼层等。
 -使用MySQL存储配置数据，并通过Redis、Caffeine缓存高频访问数据，提升页面加载速度。
 -使用kafka通知清理缓存，保证数据的一致性。
-带领5人开发团队，完成多个迭代版本需求的交付，确保项目按时上线并满足业务需求。

线上购物平台通过技术创新和商业模式优化，解决了用户在购物过程中遇到的诸多痛点，
提供了更便捷、高效和个性化的购物体验。随着技术的不断发展，线上购物平台将继续提升用户体验，满足用户的多样化需求。
购物不便  商品选择有限  价格不透明  信息不对称  购物体验单一 支付风险  物流配送慢  退换货麻烦  售后服务不完善

海外司库项目后台研发
2019.03-2022.03
2015.07-2019.03
2023.09-至今
项目简介:主要客户为新加坡财务团队，为其提供资金管理平台，银行类型分花旗银行和汇丰银行，
资金转移用途分公司间贷款、公司间结算、营运资金、贷款利息支付等，为财务团队赋能。项目单据流水达数十亿规模。
相关技术:SpringBoot+SpringCloud+Redis+Kafka+Mybatis
负责模块:资金转移模块、工作流模块、系统管理模块、银行对接模块、报表模块等。
项目职责:产品方案评审、输出技术方案、开发迭代上线、线上问题处理。
多点Dmall 后台研发2022.04-2023.09
项目简介:多点DMALL是一站式全渠道数字零售解决方案服务商，数字化解构重构零售产业，提供端到端的商业SaaS解决方案,
按地区分大陆和海外地区，海外地区的客户主要有香港万宁超市、惠康超市等，大陆地区的客户主要有物美集团、麦德龙超市、胖东来超市、重庆百货等。
按端来分，包含POS端、APP端、小程序端、智能物联等。订单年流水达百亿规模，公司年营业额达数士亿。
相关技术:Spring+SpringMVC+dubbo+zookeeper+Redis+Kafka+Mybatis+MySql分库分表
负责模块:商城首页内容管理系统、订单系统、围栏时效运费系统系统等。
项目职责:项目搭建、输出概要设计文档、输出研发排期计划、输出上线计划文档(包含回退方案)、实时响应线上问题。
春播科技后台研发组长
2019.03-2022.03
项目简介:春播是生鲜电商平台，面向北京、上海、南京等城市配送生鲜类商品，
平台主要包含首页系统、详情系统、购物车系统、订单系统、营销活动系统、优惠券系统、仓储系统等。主要为自有农庄、平谷大仓等线上销售赋能。
相关技术:Spring+SpringMVC+dubbo+zookeeper+Redis+Kafka+Mybatis+MySql
负责模块:订单正向系统，订单逆向系统，第三方订单系统等，微服务的整体架构和设计
项目收获:掌握电商平台整体运营流程;掌握分布式相关技术;强抗压能力，24小时on cal
XDATA数据交换平台后台研发
2018.03-2019.03
项目简介:在XDATA数据交换平台，是一款面向数据仓库和大数据分析领域的一站式数据抽取、投递和核服务，并覆盖了Oracle、MVSOL、PG等多种场景，
核心组件抽取组件hca,投递组件hdh线上部署达数千台。
相关技术:Springboot+Redis+Kafka+Mybatis
负责模块:
数据源管理模块、任务开发模块、任务调度模块、事件监控模块、数据抽取模块、数据投递模块等
项目收获:Kafka集群根据部门进行多集群部署;掌握数据同步相关业务;认识到事件检控平台的重要性等。
DFX设计平台后台研发
2015.07-2018.03
项目简介:在DFX设计平台项目，主要提供化一个提供文档写作、评审、发布、浏览、引用、导入、导出等功能的平台。
业务上主要分为文档、实例、故障等，旨在为设计开发办公人员提供一个安全、高效、便捷的写作平台。
相关技术:Spring+SpringMVC+dubbo+zookeeper+Mybatis
负责模块:配置服务、元数据服务、文档服务、实例服务、故障服务等，方案设计和开发
项目收获:从单一服务拆分为微服务，提升了系统的可用性和容错性;学习到选代开发各流程文档的重要性。
---

### **证书与荣誉**
- Oracle Certified Professional, Java SE Programmer
- AWS Certified Solutions Architect – Associate
- [其他相关证书或荣誉]



以下是一份针对 **Java 电商平台首页系统项目经历** 的示例描述，适用于应聘 Java 开发工程师或相关岗位。请根据您的实际经验进行调整和补充。

---

购物不便  商品选择有限  价格不透明  信息不对称  购物体验单一 支付风险  物流配送慢  退换货麻烦  售后服务不完善


以下是一份针对 **Java 电商平台订单系统项目** 的详细介绍，适用于应聘 Java 开发工程师或相关岗位。请根据您的实际经验进行调整和补充。

---

### **项目名称**：电商平台订单系统
**项目时间**：2021.05 - 2023.02
**项目角色**：Java 开发工程师
**项目描述**：
电商平台订单系统是电商平台的核心模块之一，负责处理用户下单、支付、发货、退货等全流程订单管理。项目采用分布式架构，基于 Spring Boot 和 Spring Cloud 开发，支持高并发订单处理和复杂的业务逻辑。

---

### **职责与成就**
1. **需求分析与系统设计**
   - 参与需求分析，与产品经理和业务团队协作，确定订单系统的核心功能（如下单、支付、发货、退货等）。
   - 设计系统架构，采用分布式架构（Spring Cloud）实现模块化开发，提升系统的可扩展性和可维护性。

2. **核心功能开发**
   - **订单创建模块**：
     - 实现用户下单功能，支持多种商品类型（如普通商品、秒杀商品、团购商品）。
     - 使用 Redis 分布式锁解决高并发下单问题，避免超卖。
   - **订单支付模块**：
     - 集成第三方支付平台（如支付宝、微信支付），支持多种支付方式。
     - 实现支付状态回调功能，确保订单状态实时更新。
   - **订单查询模块**：
     - 提供订单列表和详情查询功能，支持按状态、时间、商品等条件筛选。
     - 使用 Elasticsearch 实现订单搜索功能，提升查询性能。
   - **订单状态管理模块**：
     - 实现订单状态流转（如待支付、已支付、已发货、已完成、已取消）。
     - 使用状态机模式管理订单状态，确保状态流转的准确性和一致性。
   - **退货与售后模块**：
     - 实现用户申请退货、商家审核、退款处理等功能。
     - 集成物流系统，支持退货商品的物流跟踪。

3. **性能优化**
   - 通过 Redis 缓存订单数据和商品库存信息，将下单响应时间从 1 秒缩短至 200 毫秒以内。
   - 使用消息队列（Kafka）异步处理订单状态更新和通知，提升系统吞吐量。
   - 优化数据库查询，通过分库分表和索引技术提升查询性能。

4. **高可用与容灾设计**
   - 使用 Sentinel 实现服务限流和熔断，确保系统在高并发场景下的稳定性。
   - 设计容灾方案，通过多机房部署和自动切换机制，保证系统的高可用性。

5. **测试与部署**
   - 编写单元测试（JUnit）和集成测试，确保代码质量，测试覆盖率达 90% 以上。
   - 使用 Jenkins 实现持续集成和持续部署（CI/CD），提升开发效率。
   - 通过 Docker 和 Kubernetes 部署服务，实现自动化运维。

6. **团队协作与项目管理**
   - 使用 Git 进行代码版本管理，遵循 Git Flow 工作流。
   - 参与每日站会和迭代评审，推动项目按时交付。

---

### **技术栈**
- **后端技术**：Spring Boot、Spring Cloud、MyBatis、Redis、Elasticsearch、MySQL、Kafka
- **前端技术**：HTML5、CSS3、JavaScript、Vue.js（与前端团队协作）
- **工具与平台**：Git、Jenkins、Docker、Kubernetes、Nginx
- **其他技术**：Sentinel（限流与熔断）、RabbitMQ（消息队列）、Prometheus（监控）

---

### **项目成果**
- 订单系统上线后，日均订单处理量达到 100 万单，峰值 QPS 达到 5,000+。
- 系统支持秒杀活动等高并发场景，订单创建成功率保持在 99.99% 以上。
- 用户下单响应时间缩短至 200 毫秒以内，用户体验显著提升。

---

### **项目亮点**
1. **高并发处理能力**：通过 Redis 分布式锁和消息队列，解决高并发下单和状态更新问题。
2. **灵活的订单状态管理**：采用状态机模式，确保订单状态流转的准确性和一致性。
3. **分布式架构**：基于 Spring Cloud 实现模块化开发，提升系统的可扩展性和可维护性。

---

### **自我总结**
通过该项目，我深入掌握了电商平台订单系统的开发与优化技术，积累了丰富的高并发处理经验。同时，通过与产品、设计和测试团队的紧密协作，提升了沟通能力和项目管理能力。未来，我将继续探索新技术，为电商平台的发展贡献力量。

---

希望这份项目介绍能帮助您展示自己的技能和经验！如果需要进一步调整或补充，请随时告知。

### **项目名称**：电商平台首页系统
**项目时间**：2022.03 - 2023.08
**项目角色**：Java 开发工程师
**项目描述**：
电商平台首页系统是用户访问电商平台的第一入口，负责展示商品推荐、促销活动、分类导航等内容。项目采用微服务架构，
基于 Spring Boot 和 Spring Cloud 开发，支持高并发访问和个性化推荐。
---

### **职责与成就**
1. **需求分析与系统设计**
   - 参与需求分析，与产品经理和设计师协作，确定首页功能模块（如轮播图、商品推荐、分类导航等）。
   - 设计系统架构，采用微服务架构（Spring Cloud）实现模块化开发，提升系统的可扩展性和可维护性。

2. **核心功能开发**
   - **首页内容管理**：
     - 开发首页内容管理模块，支持动态配置轮播图、广告位、推荐商品等。
     - 使用 MySQL 存储配置数据，并通过 Redis 缓存高频访问数据，提升页面加载速度。
   - **商品推荐模块**：
     - 基于用户行为数据（如浏览记录、购买记录），开发个性化推荐算法。
     - 使用 Elasticsearch 实现商品搜索和推荐功能，支持实时更新推荐结果。
   - **分类导航模块**：
     - 实现多级分类导航功能，支持动态调整分类顺序和展示内容。
     - 使用树形结构存储分类数据，优化查询性能。

3. **性能优化**
   - 通过 Redis 缓存首页静态内容，将页面加载时间从 2 秒缩短至 500 毫秒以内。
   - 使用 Nginx 实现负载均衡，支持高并发访问（峰值 QPS 达到 10,000+）。
   - 优化数据库查询，通过索引和分表技术提升查询性能。

4. **高可用与容灾设计**
   - 使用 Sentinel 实现服务限流和熔断，确保系统在高并发场景下的稳定性。
   - 设计容灾方案，通过多机房部署和自动切换机制，保证系统的高可用性。

5. **测试与部署**
   - 编写单元测试（JUnit）和集成测试，确保代码质量，测试覆盖率达 90% 以上。
   - 使用 Jenkins 实现持续集成和持续部署（CI/CD），提升开发效率。
   - 通过 Docker 和 Kubernetes 部署服务，实现自动化运维。

6. **团队协作与项目管理**
   - 使用 Git 进行代码版本管理，遵循 Git Flow 工作流。
   - 参与每日站会和迭代评审，推动项目按时交付。

---

### **技术栈**
- **后端技术**：Spring Boot、Spring Cloud、MyBatis、Redis、Elasticsearch、MySQL
- **前端技术**：HTML5、CSS3、JavaScript、Vue.js（与前端团队协作）
- **工具与平台**：Git、Jenkins、Docker、Kubernetes、Nginx
- **其他技术**：Sentinel（限流与熔断）、Kafka（消息队列）、Prometheus（监控）

---

### **项目成果**
- 首页系统上线后，用户访问量提升 30%，页面加载速度提升 60%。
- 个性化推荐模块使商品点击率提升 20%，转化率提升 15%。
- 系统支持日均 1000 万次访问，峰值 QPS 达到 10,000+，稳定性达到 99.99%。

---

### **项目亮点**
1. **高性能与高可用**：通过 Redis 缓存、Nginx 负载均衡和 Sentinel 限流，确保系统在高并发场景下的稳定性和性能。
2. **个性化推荐**：基于用户行为数据，实现精准的商品推荐，提升用户体验和转化率。
3. **微服务架构**：采用 Spring Cloud 实现模块化开发，提升系统的可扩展性和可维护性。

---

### **自我总结**
通过该项目，我深入掌握了电商平台首页系统的开发与优化技术，积累了丰富的高并发处理经验。同时，通过与产品、设计和测试团队的紧密协作，提升了沟通能力和项目管理能力。未来，我将继续探索新技术，为电商平台的发展贡献力量。

---

希望这份项目经历描述能帮助您展示自己的技能和经验！如果需要进一步调整或补充，请随时告知。
---

### **自我评价**
具备扎实的Java开发基础和丰富的实战经验，能够独立完成复杂系统的设计与开发。注重代码质量和团队协作，善于学习新技术并将其应用于实际项目中。
希望通过不断学习和实践，为团队和公司创造更大的价值。

---

希望这份简历模板对您有所帮助！如果需要进一步调整或补充，请随时告知



内容: 主要负责大数据平台下的Xdata数据交换服务项目、ldealBP平台的概要设计的编写，业务对接，需求开发，需求串讲及反串讲，任务分配，开发，服务部署等工作。
工作绩效:
1.主要参加ldeal BP由Oracle切换到Mysql并成功上线，项目组每年可节约上百万的运维成本。
2.主导了全屋订单的正向生成和逆向生成的路线建设，使产品又多了一条业务收入线。
3.主导Xdata项目由单集群切换到多集群，大大提高了系统的可用性和稳定性。
4.主导了PG实时同步的路线建设，使得产品多了一种应用场景。
中软国际有限公司
2018.09-2020.04
Java
内容:主要是负责相关开发工作，负责需求方案编写，及核心业务逻辑实现，与客户对接需求，多个微服务owner，任10人左右小组组长。
工作绩效:
编写需求方案，大大降低了其他开发者的开发难度，
主导OTN项目从单一系统，并入平台的微服务架构。
配置中心、OTN、IMS服务的Owner，支撑了数次版本上线。


主要参与文档系统的开发工作，根据项目经理要求，完成相关功能开发，相关技术文档的编写。
工作绩效:
作为新员工导师，使其逐渐熟悉项目业务，逐渐独当一面。
编写服务组件应用核心业务代码，并顺利上线。
优化了不少存量代码，使系统的性能提高。

2021/3-2023/9
项目名称:多点Dmall APP首页系统
技术栈:Spring、Redis、Caffeine、Kafka、dubbo、zookeeper、Mysql
项目描述:多点DMALL是一站式全渠道数字零售解决方案服务商，主要客户有物美超市、重庆百货、胖东来超市、711等，为客户提供端到端的商业SaaS解决方案。
首页系统是用户访问App的第一入口，负责展示商品推荐、促销活动、分类导航等内容。项目采用微服务架构，支持高并发访问和个性化推荐。
主要解决了用户线下购物不便、物流配送慢、退换货麻烦等痛点，为用户提供更便捷、高效的购物体验，满足用户的多样化需求。
职责与成就:
-负责物美云、公有云的首页系统需求分析与系统设计。
-核心功能开发
 -开发首页内容管理模块，支持动态配置轮播图、广告位、推荐商品、分类导航、新人促销、优惠券楼层等。
 -使用MySQL存储配置数据，并通过Redis、Caffeine缓存高频访问数据，提升页面加载速度。
 -使用kafka通知清理缓存，保证数据的一致性。
-带领5人开发团队，完成多个迭代版本需求的交付，确保项目按时上线并满足业务需求。

2019.03-2021.03
项目名称:Ideal BP电子交易平台
技术栈:SpringBoot、Eureka、Apollo、Druid、Redis、RocketMQ、Mysql
项目描述:华为电子交易中台系统--IDeal BP主要用于承接Pmall、Vmal、Xmall等华为商城数据，2020年该中台系统承接的交易额突破千亿，
成为华为电子交易部门的核心项目之一。该项目架构十分庞大，涉及去O，公共，平台、云服务、框架协议中心、订单中心等多个项目组。项目模块主要分：
去O组，公共组，平台组、云服务组、设备框架协议、中资框架协议、设备订单、中资订单、服务订单、Pmal订单Xmall订单、Vmall订单、全屋订单、VDF订单、订单正向生成、订单逆向生成等
职责与成就:
-订单组Process工程责任人，Process工程代码量达10多万行，检视工程提交代码
-业务迭代流程规范，从业务->BA->概亚设计->开发->转测->sit->uat->上线。
-数据库从Oracle切成开源的MySql，一年可以节约上百万的成本。
-订单Sign后发外围从各个系统接口对接，改为了MQ对接，使数据对接与外围接口，减少了大量的联调工作量。


Ideal BP电子交易平台
2021.03-2022.03
内容:1.1项目简介
华为电子交易中台系统--IDeal BP主要用于承接Pmall、Vmal、Xmall等华为商城数据，2020年该中台系统承接的交易额突破千亿，成为华为电子交易部门的核心项目之一。
该项目架构十分庞大，涉及去O，公共，平台、云服务、框架协议中心、订单中心等多个项目组，目前还在不断的选代更新中。
1.2 项目模块
去O组，公共组，平台组、云服务组、设备框架协议、中资框架协议、设备订单、中资订单、服务订单、Pmal订单Xmall订单、Vmall订单、全屋订单、VDF订单、订单正向生成、订单逆向生成等
2.项目技术
2.1项目基本架构
前端(hae框架)，网关使用的是GateWay，注册中心用的Eureka，配置中心用的Apollo，数据库监控用的是Druid，缓存用的是Redis Cluster集群(6主6从)，
消息中间件用的是RocketMQ，数据库用的是MySGl(基于DDMS(mycat)进行分库分表)，负载均衡使用的是Nginx，从业务上，分为公共组，平台组，云服务组，框架组，订单组，多项目组协同作业。
2.2项目技术栈
2.2.1单一服务使用的是SpringBoot，约定大于配置，开发更便捷,
2.2.2持久层采用tk.mybatis，可兼容复杂SQL手动编写和简单SQL自动生成。
2.2.3数据库从0ralce切换到Mysql，由因数据库表数据超过6千万，采用DDMS(mysql)基于hash取模进行分库分表，订单组的分片健使用的订单ID。迁移中涉及5QL拆分及优化
2.2.4分布式短存使用的是Redis Cluster集群(6主6从)保证高可用，基于Redission框架，在某些业务场景使用了分布式锁，如权限同步，框架信息同步等业务场景。
2.2.5消息中间件使用的是RocketMQ，基于可扩展性、性能、数据量考量，从Kafka、RocketMO、RabbitMO中选择了RocketMQ，水平扩展性好，也经历了业界双十一的考验。
用RocketMQ，使用功能异步、功能解，削峰填谷。
2.2.6使用线程池，以提升性能，因是I0密集型业务，线上机器配置为16C32G,将核心线程数设为30个。池化技术，可以节约线程创建和销毁时间，多核CPU并行处理，以提升效率。等等

项目优化点
2.3,1数据库从Oracle切成开源的MySql，一年可以节约上百万的成本。
2.3.2 订单5ign后发外围从各个系统接口对接，改为了MQ对接，是数据对接与外围接口，减少了大量的联调工作量。2.3,3因DDMS(mycat)分库分表后，权益包快照数据较大，
mysql数据库主备同步时有丢失数据现象，故权益包数据从快照数据改为结构化表，使得权益包数据更加稳定。等等项目亮点
2.4.1业务场景繁多，订单正向生成和订单逆自生成流程较为复杂，每天都可以学到新的知识点
2.4.2 业务选代流程规览，从业务->BA->概亚设计->开发->转测->sit->uat->上线。
2.4.3订单敌据量大，且涉及金额，需经常检视代码，以防止功能及性问题出现
2.4.4项目文档比较完辑，学习文档很多，有上百个文件，好好学习，天天向上，
项目痛点
2.5,1订单流程复杂，定位问题比较繁琐，特别是日志系统不稳定的情况下。
2.5.2订单组对依赖其怕组，外围的数据，定位问题时，需熟恶其他系统的业务数据及表结构，联通沟通的工作量比较
多
2.5.3 维护环有dev,sit,uat，prac2,pres1,pr0,环境较多，日常处理环境问题时间较长。
职责
3.1订单组Process工程责任人，Process工程代码量达10多万行，检视工程提交代码
3.2 BA进行需求交接后，输出概要设计，进行概要设计评审。
3.3核心业务的开发，测试用例评审，及环境问题处理
3.4作为新员工导师，对新员工的学习进行规划和指导
3.5法代版本上线支持，上线问题处理。



2021/3-2023/9
项目名称:多点Dmall APP首页系统
技术栈:Spring、Redis、Caffeine、Kafka、dubbo、zookeeper、Mysql
项目描述:多点DMALL是一站式全渠道数字零售解决方案服务商，主要客户有物美超市、重庆百货、胖东来超市、711等，为客户提供端到端的商业SaaS解决方案。
首页系统是用户访问App的第一入口，负责展示商品推荐、促销活动、分类导航等内容。项目采用微服务架构，支持高并发访问和个性化推荐。
主要解决了用户线下购物不便、物流配送慢、退换货麻烦等痛点，为用户提供更便捷、高效的购物体验，满足用户的多样化需求。
职责与成就:
-负责物美云、公有云的首页系统需求分析与系统设计。
-核心功能开发
 -开发首页内容管理模块，支持动态配置轮播图、广告位、推荐商品、分类导航、新人促销、优惠券楼层等。
 -使用MySQL存储配置数据，并通过Redis、Caffeine缓存高频访问数据，提升页面加载速度。
 -使用kafka通知清理缓存，保证数据的一致性。
-带领5人开发团队，完成多个迭代版本需求的交付，确保项目按时上线并满足业务需求。

项目名称:Xdata数据交换平台
技术栈:SpringBoot、Redis、Kafka、Zookeeper、Oracle
项目介绍:数据交摸服务(data exchange,简称Xdata)，采面向整限仓库几大致据分析领域提供高教稳定的一站式数报抽职，投议及糟核婉力，支持实时与实时增量两种同步方式，
覆盖了0racle、MySQL、GauSSDB、Hive、PG等多种场景。项目模块有：基础信息模块、资源管理模块、数据源管理模块、任务开发模块、任务调度块、事监控模块、操作日志模块、数据稽查模块。
核心业务工程主婴包括hca、hdh。hca主要负责数据的抽取，将信息发送到消息中间件Kafka，hdh负责数据的投遇，消费Kafka中的散据进行入库。
职责与成就:
--Kafka从单一集群切换到多个集群，因线上Kafka挂过一次，便提出多套Kafka进行容史和资源隔离。大体的业务逐辑是按应用层级和任务层级来决定具体的任务
来使用哪套Kafka，较重要(财经用户)的业务会分配更多的资源。
--核心数据拍取工程hca，数据投递工程hdh，使用原生java工程，更轻量级，所支持的并发更高，生产上hcahdh每台机器部署了20个实例，各部署了100台机器。
--消息组件项目使用kafka*zookeeper，zk作为注册中心，配置中心，使用zk的顺序临时节点，Curator框架实现分布式锁，比如任务分配场景。
--生产环境有1万多个实时任务，每个实时任务处理的数据达干万级别，甚至上亿，使用多集群的使用保证了，各个租户下的任务高效的运行。
--项目工程职贵明响，划分明确，有事件值控模块，定位问题较为方便。

后台开发Xdata数据交换平台
2020.04-2021.03
内容:1.Xdata项目
1.1 项目简介
数据交摸服务(data exchange,简称Xdata)，采面向整限仓库几大致据分析领域提供高教稳定的一站式数报抽职，投议及糟核婉力，支持实时与实时增量两种同步方式，
覆盖了0racle、MySQL、GauSSDB、Hive、PG等多种场景。
1.2 项目模块
基础信息模块、资源管理模块、数据源管理模块、任务开发模块、任务调度块、事监控模块、操作日志模块、数据稽饭兽栈查模块。
2.项目技术
2.1项目基本架构
项目主要分前台，中台，后台，后台使用的是Springboot工程，工程主分，公共工程Xdata-common-parent，基础信息工程Xdata-basis-parent，
任务管理工程Xdata-hss-parent，核心业务工程Xdata-core-parent，数据查工程Xdata-crdata-parent，后台管理工程Xdata-0ps-parent。
各个工程之间使用htpclient进行信息的交互。数据库用的是Oracle。核心业务工程主婴包括hca、hdh。hca主要负责数据的抽取，
将信息发送到消息中间件Kafka，hdh负责数据的投遇，消费Kafka中的散据进行入库。
2.2 项目技术横
2.2.1 事件告留查询，任务查询等有使用redis进行缓存，
2.2.2业务逐辑中，常使用线程油来节约线程的创建和销验的时间，以提升程序的效率。
2.2,3核心数据拍取工程hca，数据投递工程hdh，使用原生java工程，更轻量级，所支持的并发更高，生产上hcahdh每台机器部署了20个实例，各部署了100台机器。
2.2.4业务上处理的数据量极大，所以消息队列上选型选择了Kafka中间件，生产共部署了6个集群，每个集群有5台Kafka。多集群模式，是为了实现集群隔离，如财经用户的群优先级别最高。
2.2.5 单例Bean使用的是DCL双层检测机制，以保证数据的安全。
2.2.6 消息组件项目使用kafka*zookeeper，zk作为注册中心，配置中心，使用zk的顺序临时节点，Curator框架实现分布式锁，比如任务分配场景。
2.3项目优化点
2.3.1Kafka从单一集群切换到多个集群，因线上Kafka挂过一次，便提出多套Kafka进行容史和资源隔离。大体的业务逐辑是按应用层级和任务层级来决定具体的任务来使用哪套Kafka，较重要(财经用户)的业务会分配更多的资源。
2.3.2PG实时路络线的建设，使得数据库实时投递类型得以扩展。
2.3,3 开源组件安全排查，以确保工程所使用的开源组件是安全版本，以提高项目数据的安全性。
2.4 项目亮点
2.4.1生产环境有1万多个实时任务，每个实时任务处理的数据达干万级别，甚至上亿，多集群的使用保证了，各个租户下的任务高效的运行。
2.4.2 数据量大，并发量高。
2.4.3 项目工程职贵明响，划分明确，有事件值控模块，定位问题较为方便。
2.5 项目痛点
2.5.1项目文档不够完善，很多逻辑需要在代码中寻找
2.5.2上线部署比较繁琐，没有使用kBs编排数据，上线时间较长。
3.职费
3.1需求对接、串讲、反串讲，开发任务分配，开发，多环境验证，上线。
3.2开发过程风险监控，及时反馈风险和处理风险。
3.3代码检视，代码评估，预演环境问题处理，支撑上线。





2600+3000+3300+2500  11500

武汉  当代国际花园， 一居 2000,二居2600，规模大
光谷青年汇 一居,1500，地铁秀湖站1000m，有点偏，规模小
成园小区，规模小，离火车道近，吵  一居1600
万科红郡 一居少，二居2600-2800，规模大
万科花园 一居2000-2100 ，二居 2600-2800，规模大
现代森林小镇, 万科红郡附近差不多



清江山水 一居 1800-2000  二居 2700左右  很近 10min
朗诗里程  1h 二居 2500 未装修 1500
锦绣龙城 40min 二居 2200-2600
保利时代南区  二居 3000+
万科嘉园  50min  二居 2500
联投花山郡二期 1h+
保利时代北区  20min 二居 3000+
万科城花璟苑 30min  二居 3000+
金地格林东郡 30min 二居 3000+
旭辉御府 50min   二居 2400-2600
万科红郡  二居 2600左右  40min
当代国际花园  二居 2600左右 40min
碧桂园生态城左岸 1h+
万科城市花园 二居 2600左右  40min
当代国际花园四期 二居 2600左右  40min

一居 2000左右  二居居多 2400-2700不等 建议当代国际花园附近安静

一居室 1400-2000
二居室 2600左右



20.5  24.25  3.75 15.46% 2100
15  17  2  11.77%  2000
9.5 10.3 0.8 7.74% 1850
5 5.37  6.6%

710 560  410

2018-2021  2399/2900  34,800/Y  82.7% lx  2401  2307
2021-2022  2246-2213 2856 34,272/Y  78% lx
2022-2023 2133-2098  2800  2038 2759  33,600/Y  75.5% lx
2024
3,133.97  2,650.53+265  2,926.16  2,920.69  2,915.22  2,909.75   17721.32
2,792.11  2,426.22+155  2,601.21  2,596.19  2,574.99  2,505.64   15,651.36

2024 1-12  33,372.68/Y
33,372.68 - 18,312 =  15,060.68   1255/yue  45% lx

2025 1-4  33,940.59/Y
2407.52  2,107.02+122  2,248.03  2,243.84

9,128.59 - 6,104 = 3,024.59  756/yue 1-4  33% lx
预计 4,480+3024.59  7504   25,816.59  625/yue 1526  625/2150  29% lx

108*8+200 1064 8124 13%   8,568 714/M  33,940.59  25.2 lx


3000+1600+3300+2000 9900

2450+2500+3300+2000 10250

2450+2500+2500+2000 9500

2800+2500+3333+2000 10633

2800+2500+2500+2000 9800

30*30(hsf)+200(sd)+200(hf)+50(cx)+100(xp)  1500

21.2-25.4 


25.5+4.1=29.6

5 6 7(??)

2000+1600+3000+

1.1项目简介
NeCare Lite是支撑GTSCS稳健网络解决方案而开发的应用。其主功能是网络/设备风险的预防预测，通过对现同设备的日志/性能/配置等数据进行分析和计算，
识别出当前网络/设备的亚健康风险，基于运维经验库给出解决建议。
NetCare Lite与业务组件的集成:1)网元/网管效据采集、解忻脱敏后通过Kafka传输到NetCare Lite存储。2)各业务组件分析的风险数据通过Kafka传输到NetCareLite存储。
3)NetCare Lite平台触发采集动作和传输设备信息，通过Restful接口与业务组作集成。4)各业务组件分析预围出案的队险详情页通过代理第一时间在NetCareLite平台量呈现。
1.2项目模块
NetCare Lite主要功能如下:统一界面星现、项目管理、设备管理、用户管理、日志管理、预测项目采集调度、Volite风险预测与定界、家宽铜线风险预测、微波风险预测、
大教据计算、硬件亚健康预测、输链路亚处康预测、资源客量监测等。
2.项目技术
2.1 项目基本架构
HTML5 + jS + Servicecomb + SSM + Mysql + Kafka + Redis + Nginx + Docker + KBs
2.2 项目技术悦
2.2.1维服务技术采用ServiceComb微服务拒架，类似于SprinaCloud，朋务信息丰要由vam配置信息决定，可声明服务的注册及需亚调用的服务等。
ServiceComb使原本庞大的单一系统，分解为多个特定功能的多个微服务，实现服务化，也便于后续需求的拓展。
2.2.2 后端采用Spring+SpringMVC+Mybatis，数据库使用过0racle、Mysql。
2.2.3服务编排上，采用 Docker+kB5。大政流释是將团队开大的微服务模块打成war包，然后通过Dockerfile整合到Docker容器中，并且上传到Docker私服，供后续各个微服务之问调用。
2.2.4数据库从Oracle切换到Mysgl，对数据量较大的子工程，使用mycat进行分库分表，通过explain语句查询执行计划，主要从建索引、命中分片健等方面进行SQL优化。
有的业务表的数据达三千多万，多张表达八百万以上的数据，对这些表进行分库分表，很大的程度上提升了系统的性能。
2.2.5 预防预测各流程之问的功能异步，由Kafca完成。
2.2.6 快用redis作为短存层。
2.3 项目优化点
2.3,1由单一架构系统切换成微服务架构，使得项目扩展性更好。
2.3,2项目服务部暑由原来的原生komcat部署，改成docker +k8s部署，使得环境上线更加高效。
2.3,3 数据库从商用的0racle切成开源的MySgl，项目运维成本大大降低。
2.4 项目亮点
2.4.1项目团队氛围挺好，项目团建比较多。
2.4.2 数据量大，性能优化空间大，可以持续不断对性能进行优化。
2.4.3 项目部署方便，上线时间短且快。
2.5 项目痛点
2.5,1未使用Springboot，项目配置项多，管理起来比较麻烦。
2.5,2项目提交代码检验工具耗时30mmin左右，很容易合并产生冲突。
3.职责
3.1DTN、IMS、配置管理等服务的OWMG，负责新需求的拆分，任务分配及部分功能开发。
3.2担任小姐组长，负责对接其他小姐，测试姐等。
3.3项目微服务化，切数字中台等工作。
3.4 支撑版本发布，生产环境问题的定位和解决。
DFX文档设计平台
2015.07-2018.08
内容:1.1项目简介
DFX设计平台是一个提供文档写作、评审、发布，浏览，引用、导入、导出等功能的平台。项目采用服务化的分布式架构，主要包含门户站台、组合微服务、原子微服务。
其中门户站点主要包含文档、实例、故障、系统管理等站点，组合微服务主要文档、实例、故障等核心业务微服务，原子服务主要包含模板、系统配置、元数据等基服务。
该平台是2012实验室下的一个文档写作平台、与IDP系统、NAS服务、病毒扫描系统等均有接口的交互，旨在为设计开发办公人员摆供一个安全、高效、便捷的写作平台。
1.2项目榄块
2.项目技术:
2.1 项目基本架构
Vue + Oubbo + 2K+ Redi$ + ActiveMQ+ MySql + ES
2.2项目技术栈
2.2.1使用dubbo管理中间件工具，提供在业务层到数据仓库间有诸多服务的接入和服务的提供、调度。使用zookeeper作为注册中心，管理服务提供者、服务消费者。
2.2.2 使用maven聚合工程管理项目，实现框架用的是Spring+5pringMVC+Mybatis,数据库用的是MySQL，使用nginx实观服务的负均衡。
2.2,3 代码版本管理用的是Git,资料共享管理使用的是SVN.
2.2,4 使用flywray对数据库的版本进行管理、使用yamml脚本管理微服务接口
2.2.5 使用Activiti枢架实现项目中文档审批流程、权限申请、群姐加入等功能。
2.2.6使用ActiveMQ，实现某些场景的异步处理，比如上传大批量文件等;实现应用解耦，比如审批流程走完，写入消息，给用户发朗件，无论邮件是否发生成功，
都不会影响审批的结果，实现了审批与发生邮件的解。
2.2.7使用非美系型数据岸redis级存技术，提升果些场景(如膏询想素，文档、故障列表等)的查询效率，使用多线程，提升上传大批量文件的、故障的树形数据组织结构的查询等场景的效率
2.2.8 使用时的Vue框架，路由、接口的定义均采用resful风格，以达到见其名便知其意的效果，请求使用ajax异步请
象，前后台数据通常使用I50N的形式进行交互
2.2.9 通过任务模板，项目模饭，模板化的思想，管理创建项目、任务所需的数据2.2.10 使用POI实现Excel文件数据的导入，导出
2.3 项目优化点
2.3.1随着业务数据量的增加，引入Redis中间件，和MQ中同件，提高了系统的可用性，但也高了系统的开发难度2.3.2支持批量上传文件，提升了用户的体验。
2.4 项目亮点
2.4.1项目服务拆分的类度比较细，便于后续的扩展
2.4.2 项目有定期的技术分享，团队氛国性，
2.5 项目痛点
2.5,1微服务轻架使用的Dubbo+zk，很多基础服务都需要自己开发，比如配置中心、服务网关等，2.5,2 项目初期的数据量不大，对性能调这块力不大。
3.职责
3.1参与需求方案的评审，理清业务逐辑、实现方式，将需求拆分为若干st0ry,并编写对应的开发的todo-list、验收标准，计划完成时间。以隆低凤除。
3.2开发过程中，主要负贵接口定义、具体业务逐辑的实现，Da0层，业务层在微服务中编号，Controller层在门户站点进行编写，与前台进行数据的交互。
使用Vue，编写前台html、js、c55,与接口进行联调。
3.3 参与测试用例的评审，补充测试寒考虑到的业务场景，
3.4 参与同事结对检概代弱、以优化代码，并有利于项目组编码风格的统一
3.5 支持日常版本的发布。